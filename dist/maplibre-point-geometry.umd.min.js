(function(h,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(h=typeof globalThis<"u"?globalThis:h||self,r(h.maplibrePointGeometry={}))})(this,function(h){"use strict";class r{constructor(t=0,i=0){this.x=t,this.y=i}_matMult(t){const i=t[0]*this.x+t[1]*this.y,s=t[2]*this.x+t[3]*this.y;return this.x=i,this.y=s,this}_add(t){return this.x+=t.x,this.y+=t.y,this}_sub(t){return this.x-=t.x,this.y-=t.y,this}_mult(t){return this.x*=t,this.y*=t,this}_div(t){return this.x/=t,this.y/=t,this}_multByPoint(t){return this.x*=t.x,this.y*=t.y,this}_divByPoint(t){return this.x/=t.x,this.y/=t.y,this}_unit(){return this._div(this.mag()),this}_perp(){const t=this.y;return this.y=this.x,this.x=-t,this}_rotate(t){const i=Math.cos(t),s=Math.sin(t),n=i*this.x-s*this.y,e=s*this.x+i*this.y;return this.x=n,this.y=e,this}_rotateAround(t,i){const s=Math.cos(t),n=Math.sin(t),e=i.x+s*(this.x-i.x)-n*(this.y-i.y),u=i.y+n*(this.x-i.x)+s*(this.y-i.y);return this.x=e,this.y=u,this}_round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}clone(){return new r(this.x,this.y)}add(t){return this.clone()._add(t)}sub(t){return this.clone()._sub(t)}multByPoint(t){return this.clone()._multByPoint(t)}divByPoint(t){return this.clone()._divByPoint(t)}mult(t){return this.clone()._mult(t)}div(t){return this.clone()._div(t)}rotate(t){return this.clone()._rotate(t)}rotateAround(t,i){return this.clone()._rotateAround(t,i)}matMult(t){return this.clone()._matMult(t)}unit(){return this.clone()._unit()}perp(){return this.clone()._perp()}round(){return this.clone()._round()}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}equals(t){return this.x===t.x&&this.y===t.y}dist(t){return Math.sqrt(this.distSqr(t))}distSqr(t){const i=t.x-this.x,s=t.y-this.y;return i*i+s*s}angle(){return Math.atan2(this.y,this.x)}angleTo(t){return Math.atan2(this.y-t.y,this.x-t.x)}angleWith(t){return this.angleWithSep(t.x,t.y)}angleWithSep(t,i){return Math.atan2(this.x*i-this.y*t,this.x*t+this.y*i)}toString(){return`{x: ${this.x}, y: ${this.y}}`}static convert(t){return t instanceof r?t:Array.isArray(t)?new r(t[0],t[1]):t}}h.Point=r,Object.defineProperty(h,"__esModule",{value:!0})});
//# sourceMappingURL=maplibre-point-geometry.umd.min.js.map
